@page "/Login"
@using BlazorWasm.Services
@using global::Shared.Dtos
@using HttpClients.ClientInterfaces
@inject IAuthService authService
@inject IUserService UserService
@inject NavigationManager navMgr
<h3>Login</h3>
<AuthorizeView>
    <NotAuthorized>
        <div class="card">
            <h3>Please login</h3>
            <div class="field">
                <label>User name:</label>
                <input type="text" @bind="userName"/>
            </div>
            <div class="field">
                <label style="text-align: center">Password:</label>
                <input type="password" @bind="password"/>
            </div>
            @if (!string.IsNullOrEmpty(errorLabel))
            {
                <div class="field">
                    <label style="color: red">
                        @errorLabel
                    </label>
                </div>
            }
            <div class="field">
                <button class="loginbtn" @onclick="LoginAsync">Log in</button>
            </div>
        </div>
        <div class="card">
                    <h3>Don't have an account? Register here!</h3>
                    <div class="field">
                        <label>User name:</label>
                        <input type="text" @bind="registerUserName"/>
                    </div>
            <div class="field">
                <label style="text-align: center">Password:</label>
                <input type="password" @bind="registerPassword"/>
            </div>
            <div>
                <label style="text-align: center">Confirm password:</label>
                <input type="password" @bind="confirmPassword"/>
            </div>
                    @if (!string.IsNullOrEmpty(registerErrorLabel))
                    {
                        <div class="field">
                            <label style="color: red">
                                @registerErrorLabel
                            </label>
                        </div>
                    }
                    <div class="field">
                        <button class="loginbtn" @onclick="CreateUserAsync">Register</button>
                    </div>
                </div>
    </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Hello, @context.User.Identity.Name You are already logged in!</h3>
            <p>how did you get here?</p>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private string userName;
    private string password;
    private string errorLabel;
    private string registerErrorLabel;
    private string registerUserName;
    private string registerPassword;
    private string confirmPassword;

    private async Task LoginAsync()
    {
        errorLabel = "";
        try
        {
            await authService.LoginAsync(userName, password);
            navMgr.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }
    
    private async Task CreateUserAsync()
    {
        errorLabel = "";

        if (registerPassword.Equals(confirmPassword))
        {
            try
            {
                registerErrorLabel = "trying to create you";
                await UserService.Create(new UserCreationDto(registerUserName, registerPassword));
                userName = "";
                registerPassword = "";
                confirmPassword = "";
                registerErrorLabel = "Nice, you can now log in!";
            }catch
                (Exception e)
            {
                Console.WriteLine(e);
                registerErrorLabel = e.Message;
            }
        }
        else
        {
            registerErrorLabel = "password and confirm password are not equal!";
        }
    }
}